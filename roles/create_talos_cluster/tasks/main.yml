---
- name: Create new cluster manifest
  ansible.builtin.shell:
    cmd: "clusterctl generate cluster {{ cluster_name }} -i sidero --kubeconfig kubeconfig.yml > {{ cluster_name }}-manifest.yaml"
    creates: "{{ cluster_name }}-manifest.yaml"
  environment:
    CONTROL_PLANE_ENDPOINT: "{{ cluster_name }}.{{ base_domain }}"
    CONTROL_PLANE_PORT: 6443
    CONTROL_PLANE_SERVERCLASS: "{{ node_type }}"
    CONTROL_PLANE_MACHINE_COUNT: 3
    KUBERNETES_VERSION: "v1.25.10"
    TALOS_VERSION: "v1.4"
    WORKER_SERVERCLASS: "{{ node_type }}"
    WORKER_MACHINE_COUNT: 3
    GITHUB_TOKEN: "{{ GITHUB_TOKEN }}"

- name: Generate Serverclass VM types
  ansible.builtin.template:
    src: qemu-serverclass.yml.j2
    dest: qemu-serverclass.yml

- name: Apply Serverclass to management cluster
  ansible.builtin.command:
    cmd: "kubectl --kubeconfig kubeconfig.yml apply -f {{ node_type }}-serverclass.yml"

- name: Apply cluster manifest to management cluster
  ansible.builtin.command:
    cmd: "kubectl --kubeconfig kubeconfig.yml apply -f {{ cluster_name }}-manifest.yaml"

- name: Retrieve Talosconfig
  ansible.builtin.shell:
    cmd: "kubectl --kubeconfig kubeconfig.yml get secret {{ cluster_name }}-talosconfig -o jsonpath='{.data.talosconfig}' | base64 -d > {{ cluster_name }}-talosconfig"

- name: Retrieve Kubeconfig
  ansible.builtin.shell:
    cmd: "kubectl --kubeconfig kubeconfig.yml get secret {{ cluster_name }}-kubeconfig -o jsonpath='{.data.value}' | base64 -d > {{ cluster_name }}-kubeconfig"


